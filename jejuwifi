<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
		<script
  src="https://code.jquery.com/jquery-3.6.0.js"
  integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk="
  crossorigin="anonymous"></script>
<body>

<script>
function place(){
	var place = document.getElementById('place').value;
	document.getElementById('place').value = place;
}
</script>

	<script type="text/javascript">
	//$(document).ready(function(){
	function search(){
		var place = document.getElementById('place').value;
		//버튼으로 ajax 작동하게하기 
		$.ajax({
			method:"GET",
			url:"https://open.jejudatahub.net/api/proxy/Dtb18ta1btbD1Da1a81aaDttab6tDabb/bo058ctrj10o8j1jt5t1ttj_5op19tj0?{params(key=value)}",
			data:{apGroupName:place}
		}).done(function(datas){
				console.log(datas);
				console.log(datas.data[0].apGroupName);
				console.log(datas.data[0].addressDetail);
/* 				var latitude = datas.data[0].latitude;
				var longitude = datas.data[0].longitude;
				var apGroupName = datas.data[0].apGroupName;
				var addressDetail = datas.data[0].addressDetail; */
				for(var i=0; i<datas.data.length;i++){
					$("#apGroupName").append("<li>"+datas.data[i].apGroupName+"</li>");
					$("#addressDetail").append("<li>"+datas.data[i].addressDetail+"</li>");
					$("#latitude").append("<li>"+datas.data[i].latitude+"</li>");
					$("#longitude").append("<li>"+datas.data[i].longitude+"</li>");
				};

		});
	}
	</script>
	<div id="map" style="width: 500px; height: 400px;"></div>
	<input type="text" id="place" placeholder="성산일출봉">
	<button type="button" onclick="place(); search(); map();">확인</button>
	<!-- <button type="button" onclick="search()">검색</button> -->
	<ol style="display:none" id="apGroupName"></ol>
	<ol style="display:none" id="addressDetail"></ol>
	<ol style="display:none" id="latitude"></ol>
	<ol style="display:none" id="longitude"></ol>
	<script type="text/javascript"
		src="//dapi.kakao.com/v2/maps/sdk.js?appkey=3ec986c56af14688addb3f7d57a8b710"></script>
		
	<script type="text/javascript">
	function map(){
		var ag = [];
		var ad = [];
		var la = [];
		var lo = [];
		//var la = $("#latitude").text();
		//var lo = $("#longitude").text();
		ag = $("#apGroupName li").each(function(index,elment){	
		});
		ad = $("#addressDetail li").each(function(index,elment){	
		});
		lo = $("#longitude li").each(function(index,elment){	
		});
		la = $("#latitude li").each(function(index,element){
		});
		var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
		var options = { //지도를 생성할 때 필요한 기본 옵션
			center : new kakao.maps.LatLng(la[0].innerHTML, lo[0].innerHTML), //지도의 중심좌표.
			level : 2
		//지도의 레벨(확대, 축소 정도)
		};

		var map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴
		// 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다
		var mapTypeControl = new kakao.maps.MapTypeControl();

		// 지도에 컨트롤을 추가해야 지도위에 표시됩니다
		// kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다
		map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);
		
		// 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다
		var zoomControl = new kakao.maps.ZoomControl();
		map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);
		
		// 마커가 표시될 위치입니다 
		var markerTitle = [];
		var markerPosition = [];
		for(var i=0; i < la.length; i++){
			markerTitle[i] = ag[i].innerHTML+","+ad[i].innerHTML;
			markerPosition[i] = new kakao.maps.LatLng(la[i].innerHTML,lo[i].innerHTML);
			var marker = new kakao.maps.Marker({
				position : markerPosition[i]
			});
			var infowindow = new kakao.maps.InfoWindow({
				content : markerTitle[i]
			});
		    kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
		    kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));
			marker.setMap(map);
		}
		
		// 인포윈도우를 표시하는 클로저를 만드는 함수입니다 
		function makeOverListener(map, marker, infowindow) {
		    return function() {
		        infowindow.open(map, marker);
		    };
		}

		// 인포윈도우를 닫는 클로저를 만드는 함수입니다 
		function makeOutListener(infowindow) {
		    return function() {
		        infowindow.close();
		    };
		}
		//var markerPosition = new kakao.maps.LatLng(la, lo);
		// 마커 생성
/* 		var marker = new kakao.maps.Marker({
			position : markerPosition
		}); */

	}
	</script>


	<script type="text/javascript"
		src="//dapi.kakao.com/v2/maps/sdk.js?appkey=APIKEY&libraries=LIBRARY"></script>
	<!-- services와 clusterer, drawing 라이브러리 불러오기 -->
	<script type="text/javascript"
		src="//dapi.kakao.com/v2/maps/sdk.js?appkey=APIKEY&libraries=services,clusterer,drawing"></script>
</body>
</html>
